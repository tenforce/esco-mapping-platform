(in-package :mu-cl-resources)

(setf *supply-cache-headers-p* t)
(setf *cache-model-properties-p* t)

(define-resource taxonomy ()
  :class (s-prefix "esco:ConceptScheme")
  :properties `((:preflabel :string ,(s-prefix "skos:prefLabel"))
                (:description :string ,(s-prefix "dcterms:description"))
                (:locale :string ,(s-prefix "dcterms:locale"))
                (:version :string ,(s-prefix "owl:versionInfo")))
  :resource-base (s-url "http://mapping-tool.sem.tenforce.com/taxonomies/")
  :has-many `((structure :via ,(s-prefix "esco:structure")
                        :as "structures")
              (concept :via ,(s-prefix "skos:topConceptOf")
                     :inverse t
                     :as "top-concepts"))
  :on-path "taxonomies")

(define-resource structure ()
  :class (s-prefix "esco:Structure")
  :properties `((:preflabel :string ,(s-prefix "skos:prefLabel"))
                (:description :string ,(s-prefix "dcterms:description"))
                (:codelist :uri ,(s-prefix "esco:codelist"))
                (:codedProperty :string ,(s-prefix "esco:codedProperty")))
  :resource-base (s-url "http://mapping-tool.sem.tenforce.com/structures/")
  :on-path "structures")

(define-resource concept-label ()
  :class (s-prefix "skosxl:Label")
  :properties `((:literal-form-values :language-string-set ,(s-prefix "skosxl:literalForm")))
  :resource-base (s-url "http://mapping.escoportal.eu/label/")
  :features '(no-pagination-defaults)
  :has-many `((label-role :via ,(s-prefix "esco:hasLabelRole")
                     :as "roles")
			  (concept :via ,(s-prefix "skosxl:altLabel")
                     :inverse t
                     :as "alt-label-of")
              (concept :via ,(s-prefix "skosxl:hiddenLabel")
				     :inverse t
                     :as "hidden-label-of"))
	:has-one `((concept :via ,(s-prefix "skosxl:prefLabel")
					 :inverse t
                     :as "pref-label-of"))
  :on-path "concept-labels"
)

(define-resource label-role ()
  :class (s-prefix "esco:LabelRole")
  :properties `((:preflabel :string ,(s-prefix "skos:prefLabel")))
  :resource-base (s-url "http://mapping.escoportal.eu/labelRole/")
  :on-path "label-roles"
  :has-many `((concept-label :via ,(s-prefix "esco:hasLabelRole")
					:inverse t
                    :as "role-of"))
)

(define-resource concept ()
  :class (s-prefix "skos:Concept")
  :properties `((:nace :string ,(s-prefix "esco:hasNACECode"))
                (:codes :string-set ,(s-prefix "dcterms:identifier"))
                (:types :string-set ,(s-prefix "rdf:type"))
                (:is-mappable :string ,(s-prefix "mp:isMappable"))
                (:description :language-string-set ,(s-prefix "dcterms:description"))
                (:scope-note :language-string-set ,(s-prefix "skos:scopeNote"))
                (:definition :language-string-set ,(s-prefix "skos:definition"))
                (:skill-type :string, (s-prefix "esco:skillType")))
  :resource-base (s-url "http://mapping.escoportal.eu/concepts/")
  :has-many `((concept-label :via ,(s-prefix "skosxl:altLabel")
                     :as "alt-labels")
			  (concept-label :via ,(s-prefix "skosxl:hiddenLabel")
                     :as "hidden-labels")
			  (concept-label :via ,(s-prefix "skosxl:prefLabel")
                     :as "pref-labels")
			  (concept :via ,(s-prefix "skos:broader")
                 :inverse t
                 :as "narrower")
        (concept :via ,(s-prefix "skos:broader")
                 :as "broader")
        (concept-relation :via ,(s-prefix "esco:isRelationshipFor")
                          :inverse t
                          :as "relations")
			  (taxonomy :via ,(s-prefix "skos:inScheme")
                  :as "taxonomy")
			  (taxonomy :via ,(s-prefix "skos:topConceptOf")
                  :as "top-concept-of")
        (mapping-state :via ,(s-prefix "mp:statusForConcept")
                       :inverse t
                       :as "mapping-states")
        (mapping :via ,(s-prefix "mp:mapsFrom")
                 :inverse t
                 :as "mappings-from")
        (mapping :via ,(s-prefix "mp:mapsTo")
                 :inverse t
                 :as "mappings-to")
        (suggestion :via ,(s-prefix "mp:mapsFrom")
                    :inverse t
                    :as "suggestions-from")
        (suggestion :via ,(s-prefix "mp:mapsTo")
                    :inverse t
                    :as "suggestions-to"))
  :on-path "concepts")

(define-resource concept-relation ()
  :class (s-prefix "esco:Relationship")
  :properties `((:type :string ,(s-prefix "esco:hasRelationshipType")))
  :resource-base (s-url "http://mapping-tool.sem.tenforce.com/relations/")
  :features '(no-pagination-defaults)
  :has-one `((concept :via ,(s-prefix "esco:isRelationshipFor")
                    :as "from")
             (concept :via ,(s-prefix "esco:refersConcept")
                    :as "to"))
  :on-path "concept-relations")

(define-resource mapping ()
  :class (s-prefix "mp:Mapping")
  :properties `((:status :string ,(s-prefix "mp:status"))
                (:last-modified :string ,(s-prefix "mp:lastModified"))
                (:match-type :string ,(s-prefix "mp:matchType")))
  :has-one `((concept :via ,(s-prefix "mp:mapsFrom")
                    :as "from")
             (concept :via ,(s-prefix "mp:mapsTo")
                    :as "to")
            (user :via ,(s-prefix "mp:lastModifier")
                    :as "last-modifier")
             (suggestion :via ,(s-prefix "mp:mapping")
                    :inverse t
                    :as "suggestion")
             (mapping-effort :via ,(s-prefix "mp:isMappingFor")
                    :as "mapping-effort"))
  :resource-base (s-url "http://mapping-tool.sem.tenforce.com/mappings/")
  :on-path "mappings")

(define-resource suggestion ()
  :class (s-prefix "mp:Suggestion")
  :properties `((:cluster-name :string ,(s-prefix "mp:clusterName"))
                (:textual-score :string ,(s-prefix "mp:lexicalScore"))
                (:contextual-score :string ,(s-prefix "mp:contextualScore"))
                (:flooding-score :string ,(s-prefix "mp:clusteringScore"))
                (:combined-score :string ,(s-prefix "mp:combinedScore"))
                (:label :string ,(s-prefix "mp:label"))
                (:status :string ,(s-prefix "mp:status"))
                (:source-uri :string ,(s-prefix "mp:sourceUri"))
                (:source-uuid :string ,(s-prefix "mp:sourceUuid"))
                (:target-uri :string ,(s-prefix "mp:targetUri"))
                (:target-uuid :string ,(s-prefix "mp:targetUuid")))
  :has-one `((mapping :via ,(s-prefix "mp:mapping")
                    :as "mapping")
             (mapping-effort :via ,(s-prefix "mp:isSuggestionFor")
                    :as "mapping-effort"))
  :resource-base (s-url "http://mapping-tool.sem.tenforce.com/suggestions/")
  :on-path "suggestions")

(define-resource mapping-state ()
  :class (s-prefix "mp:MappingStatus")
  :properties `((:status :string ,(s-prefix "mp:status")))
  :has-one `((concept :via ,(s-prefix "mp:statusForConcept")
                     :as "concept")
             (mapping-effort :via ,(s-prefix "mp:isMappingStateFor")
                    :as "mapping-effort"))
  :resource-base (s-url "http://mapping-tool.sem.tenforce.com/mappingstatus/")
  :on-path "mapping-states")

(define-resource mapping-effort ()
  :class (s-prefix "mp:MappingEffort")
  :properties `((:label :string ,(s-prefix "dcterms:label"))
                (:locale :string ,(s-prefix "dcterms:locale")))
  :has-one `((taxonomy :via ,(s-prefix "mp:taxonomyFrom")
                       :as "from")
             (taxonomy :via ,(s-prefix "mp:taxonomyTo")
                       :as "to"))
  :has-many `((mapping :via ,(s-prefix "mp:isMappingFor")
                       :inverse t
                       :as "mappings")
             (suggestion :via ,(s-prefix "mp:isSuggestionFor")
                       :inverse t
                       :as "suggestions")
             (mapping-state :via ,(s-prefix "mp:isMappingStateFor")
                     :inverse t
                     :as "mapping-states"))
  :resource-base (s-url "http://mapping-tool.sem.tenforce.com/mappingeffort/")
  :on-path "mapping-efforts")

(define-resource account ()
  :class (s-prefix "foaf:OnlineAccount")
  :properties `((:status :string ,(s-prefix "account:status")))
  :resource-base (s-url "http://mapping-tool.sem.tenforce.com/accounts/")
  :has-one `((user :via ,(s-prefix "foaf:account")
                   :inverse t
                   :as "user"))
  :on-path "accounts"
)

(define-resource user ()
  :class (s-prefix "foaf:Person")
  :properties `((:name :string ,(s-prefix "foaf:name"))
                (:language :string ,(s-prefix "dcterms:language"))
                (:show-details :string ,(s-prefix "mp:showDetails"))
                (:role :uri-set, (s-prefix "trans:role"))
                (:show-filter :string ,(s-prefix "mp:showFilter"))
                (:show-mappings :string ,(s-prefix "mp:showMappings"))
                (:show-completed-suggestions :string ,(s-prefix "mp:showCompletedSuggestions")))
  :has-many `((account :via ,(s-prefix "foaf:account")
                       :as "accounts")
              (group :via ,(s-prefix "foaf:member")
              :inverse t
              :as "groups"))
  :resource-base (s-url "http://mapping-tool.sem.tenforce.com/users/")
  :on-path "users")

(define-resource group ()
  :class (s-prefix "trans:EcasGroup")
  :properties `((:name :string ,(s-prefix "foaf:name")))
  :has-many `((user :via ,(s-prefix "foaf:member")
              :as "members"))
  :resource-base (s-url "http://translation.escoportal.eu/groups/")
  :on-path "groups"
)

(define-resource validation-result-collection ()
  :class (s-prefix "mu:validationResultCollection")
  :properties `((:timestamp :string ,(s-prefix "mu:timestamp"))
                (:status :string ,(s-prefix "mu:status"))
                (:graph :string ,(s-prefix "mu:Graph"))
                (:rule-id :string-set ,(s-prefix "mu:ruleId"))
                (:parameters :string-set ,(s-prefix "mu:parameters"))
                (:types :string-set ,(s-prefix "mu:types")))
  :has-many `((validation-result :via ,(s-prefix "mu:hasResult")
                     :as "validation-results"))
  :resource-base (s-url "http://translation.escoportal.eu/validationResultCollection/")
  :on-path "validation-result-collections")

(define-resource validation-result ()
  :class (s-prefix "mu:validationResult")
  :properties `((:parameter-uuid :string-set ,(s-prefix "mu:parameteruuid"))
                (:parameter-label-from :string ,(s-prefix "mu:parameterlabelFrom"))
                (:parameter-label-to :string ,(s-prefix "mu:parameterlabelTo"))
                (:parameter-language :string-set ,(s-prefix "mu:parameterlanguage"))
                (:timestamp :string-set ,(s-prefix "mu:timestamp"))
                (:rule-id :string-set ,(s-prefix "mu:ruleId"))
                (:parameter-type :string-set ,(s-prefix "mu:parametertype")))
  :has-one `((validation-result-collection :via ,(s-prefix "mu:hasResult")
                     :inverse t
                     :as "validation-result-collection"))
  :resource-base (s-url "http://translation.escoportal.eu/validationResult/")
  :on-path "validation-results")
